version: '3.8'

services:
  springboot_postgres:
    image: postgres:16
    container_name: springboot_postgres
    environment:
      POSTGRES_DB: teamory
      POSTGRES_USER: yassine
      POSTGRES_PASSWORD: yassine12345
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - teamory_net

  keycloak-db:
    image: postgres:16
    container_name: keycloak_postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5432:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - teamory_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: teamory_keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_STRICT: "false"
    depends_on:
      keycloak-db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - teamory_net

  backend:
    build: ./backend
    container_name: teamory_backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app  # <-- Sync code
      - ./mvn-repo:/root/.m2  # Optional: persist maven cache for faster builds
    depends_on:
      - springboot_postgres
      - keycloak
    ports:
      - "8081:8081"
    networks:
      - teamory_net

  frontend:
    container_name: teamory_frontend
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm start"
    depends_on:
      - backend
    networks:
      - teamory_net


volumes:
  postgres_data:
  keycloak_data:

networks:
  teamory_net:
    driver: bridge
